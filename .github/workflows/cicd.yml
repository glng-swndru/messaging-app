name: Deploy MessagingApp

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Source
              uses: actions/checkout@v4

            - name: Create .env file
              run: echo "PORT=${{ secrets.PORT }}" > .env

            - name: Login to Docker Hub
              run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}

            - name: Build Docker image
              run: docker build -t gilangswndru/simple-messaging-app .

            - name: Push Docker image to Docker Hub
              run: docker push gilangswndru/simple-messaging-app
    deploy:
        needs: build
        runs-on: self-hosted
        steps:
            - name: Pull Docker image from Docker Hub
              run: docker pull gilangswndru/simple-messaging-app:latest

            - name: Delete old Docker container
              run: docker rm -f simple-messaging-app || true

            - name: Create .env file
              run: |
                    echo "DB_HOST=${{ secrets.DB_HOST }}" >> .env
                    echo "DB_PORT=${{ secrets.DB_PORT }}" >> .env
                    echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
                    echo "DB_USER=${{ secrets.DB_USER }}" >> .env
                    echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> .env
                    echo "APP_NAME=${{ secrets.APP_NAME }}" >> .env
                    echo "APP_HOST=${{ secrets.APP_HOST }}" >> .env
                    echo "APP_PORT=${{ secrets.APP_PORT }}" >> .env
                    echo "APP_PORT_SOCKET=${{ secrets.APP_PORT_SOCKET }}" >> .env
                    echo "APP_SECRET=${{ secrets.APP_SECRET }}" >> .env
                    echo "MONGODB_URI=${{ secrets.MONGODB_URI }}" >> .env

            - name: Run Docker container
              run: docker run -d -p 8080:8080 -p 4000:4000 --name simple-messaging-app gilangswndru/simple-messaging-app